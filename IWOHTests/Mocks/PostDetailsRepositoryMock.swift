///
/// @Generated by Mockolo
///

import Combine
import CombineTestExtensions
import IWOHInteractionKit
@testable import IWOH

final class PostDetailsRepositoryMock: PostDetailsRepositoryTyp {
    init(scheduler: TestScheduler) {

		self.currentLocationDistanceHandler = { _ in
			TestValues.distance
		}

		self.canLikePostHandler = { _ in
			TestPublisher<Bool, Never>(scheduler, [(10, .value(true))]).eraseToAnyPublisher()
		}

		likePostHandler = { _ in
			TestPublisher<Bool, Never>(scheduler, [(10, .value(true))]).eraseToAnyPublisher()
		}

		likesHandler = { _ in
			TestPublisher<UInt, Never>(scheduler, [(10, .value(TestValues.likesCount))]).eraseToAnyPublisher()
		}

		distanceHandler = { _ in
			TestValues.distance
		}
	}

    var currentLocationDistanceCallCount = 0
    var currentLocationDistanceHandler: ((Location) -> (Double?))?
    func currentLocationDistance(location: Location) -> Double? {
        currentLocationDistanceCallCount += 1
        if let currentLocationDistanceHandler = currentLocationDistanceHandler {
            return currentLocationDistanceHandler(location)
        }
        return nil
    }

    var canLikePostCallCount = 0
    var canLikePostHandler: ((Post) -> (AnyPublisher<Bool, Never>))?
    func canLikePost(_ post: Post) -> AnyPublisher<Bool, Never> {
        canLikePostCallCount += 1
        if let canLikePostHandler = canLikePostHandler {
            return canLikePostHandler(post)
        }
        fatalError("canLikePostHandler returns can't have a default value thus its handler must be set")
    }

    var likePostCallCount = 0
    var likePostHandler: ((Post) -> (AnyPublisher<Bool, Never>))?
    func likePost(_ post: Post) -> AnyPublisher<Bool, Never> {
        likePostCallCount += 1
        if let likePostHandler = likePostHandler {
            return likePostHandler(post)
        }
        fatalError("likePostHandler returns can't have a default value thus its handler must be set")
    }

    var likesCallCount = 0
    var likesHandler: ((Post) -> (AnyPublisher<UInt, Never>))?
    func likes(for post: Post) -> AnyPublisher<UInt, Never> {
        likesCallCount += 1
        if let likesHandler = likesHandler {
            return likesHandler(post)
        }
        fatalError("likesHandler returns can't have a default value thus its handler must be set")
    }

    var distanceCallCount = 0
    var distanceHandler: ((Location) -> (Double?))?
    func distance(from location: Location) -> Double? {
        distanceCallCount += 1
        if let distanceHandler = distanceHandler {
            return distanceHandler(location)
        }
        return nil
    }
}

