///
/// @Generated by Mockolo
///

import Combine
import IWOHInteractionKit
@testable import IWOH

final class CreatePostRepositoryMock: CreatePostRepositoryTyp {
	init() { }
	init(locationAuthenticationStatus: AnyPublisher<LocationAuthenticationStatus, Never>, location: AnyPublisher<LocationManager.State, Never>, locationHeading: AnyPublisher<LocationHeading?, Never>) {
		self._locationAuthenticationStatus = locationAuthenticationStatus
		self._location = location
		self._locationHeading = locationHeading
	}

	var locationAuthenticationStatusSetCallCount = 0
	private var _locationAuthenticationStatus: AnyPublisher<LocationAuthenticationStatus, Never>!  { didSet { locationAuthenticationStatusSetCallCount += 1 } }
	var locationAuthenticationStatus: AnyPublisher<LocationAuthenticationStatus, Never> {
		get { return _locationAuthenticationStatus }
		set { _locationAuthenticationStatus = newValue }
	}

	var locationSetCallCount = 0
	private var _location: AnyPublisher<LocationManager.State, Never>!  { didSet { locationSetCallCount += 1 } }
	var location: AnyPublisher<LocationManager.State, Never> {
		get { return _location }
		set { _location = newValue }
	}

	var locationHeadingSetCallCount = 0
	private var _locationHeading: AnyPublisher<LocationHeading?, Never>!  { didSet { locationHeadingSetCallCount += 1 } }
	var locationHeading: AnyPublisher<LocationHeading?, Never> {
		get { return _locationHeading }
		set { _locationHeading = newValue }
	}

	var requestLocationCallCount = 0
	var requestLocationHandler: (() -> ())?
	func requestLocation()  {
		requestLocationCallCount += 1
		if let requestLocationHandler = requestLocationHandler {
			requestLocationHandler()
		}
	}

	var submitCallCount = 0
	var submitHandler: ((PostMessage) -> (AnyPublisher<SubmissionState, Never>))?
	func submit(postMessage: PostMessage) -> AnyPublisher<SubmissionState, Never> {
		submitCallCount += 1
		if let submitHandler = submitHandler {
			return submitHandler(postMessage)
		}
		fatalError("submitHandler returns can't have a default value thus its handler must be set")
	}

	var setLocationAccuracyCallCount = 0
	var setLocationAccuracyHandler: ((LocationManager.Accuracy) -> ())?
	func setLocationAccuracy(_ accuracy: LocationManager.Accuracy) {
		setLocationAccuracyCallCount += 1
		if let setLocationAccuracyHandler = setLocationAccuracyHandler {
			setLocationAccuracyHandler(accuracy)
		}
	}
}
